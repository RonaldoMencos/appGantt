
package model;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WebServiceSvc", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WebServiceSvc {


    /**
     * 
     * @param idUsuario
     * @return
     *     returns model.Usuario
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarUsuarioPorId", targetNamespace = "http://services/", className = "model.ListarUsuarioPorId")
    @ResponseWrapper(localName = "listarUsuarioPorIdResponse", targetNamespace = "http://services/", className = "model.ListarUsuarioPorIdResponse")
    @Action(input = "http://services/WebServiceSvc/listarUsuarioPorIdRequest", output = "http://services/WebServiceSvc/listarUsuarioPorIdResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://services/WebServiceSvc/listarUsuarioPorId/Fault/ParseException")
    })
    public Usuario listarUsuarioPorId(
        @WebParam(name = "idUsuario", targetNamespace = "")
        int idUsuario)
        throws ParseException_Exception
    ;

    /**
     * 
     * @param password
     * @param apellido
     * @param idUsuario
     * @param nombre
     * @param email
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "actualizarUsuario", targetNamespace = "http://services/", className = "model.ActualizarUsuario")
    @ResponseWrapper(localName = "actualizarUsuarioResponse", targetNamespace = "http://services/", className = "model.ActualizarUsuarioResponse")
    @Action(input = "http://services/WebServiceSvc/actualizarUsuarioRequest", output = "http://services/WebServiceSvc/actualizarUsuarioResponse")
    public int actualizarUsuario(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "apellido", targetNamespace = "")
        String apellido,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "idUsuario", targetNamespace = "")
        int idUsuario);

    /**
     * 
     * @param idActividad
     * @return
     *     returns model.Actividad
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarActividadPorId", targetNamespace = "http://services/", className = "model.ListarActividadPorId")
    @ResponseWrapper(localName = "listarActividadPorIdResponse", targetNamespace = "http://services/", className = "model.ListarActividadPorIdResponse")
    @Action(input = "http://services/WebServiceSvc/listarActividadPorIdRequest", output = "http://services/WebServiceSvc/listarActividadPorIdResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://services/WebServiceSvc/listarActividadPorId/Fault/ParseException")
    })
    public Actividad listarActividadPorId(
        @WebParam(name = "idActividad", targetNamespace = "")
        int idActividad)
        throws ParseException_Exception
    ;

    /**
     * 
     * @param descripcion
     * @param idProyecto
     * @param fechaInicio
     * @param titulo
     * @param empresa
     * @param fechaFin
     * @return
     *     returns int
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "actualizarProyecto", targetNamespace = "http://services/", className = "model.ActualizarProyecto")
    @ResponseWrapper(localName = "actualizarProyectoResponse", targetNamespace = "http://services/", className = "model.ActualizarProyectoResponse")
    @Action(input = "http://services/WebServiceSvc/actualizarProyectoRequest", output = "http://services/WebServiceSvc/actualizarProyectoResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://services/WebServiceSvc/actualizarProyecto/Fault/ParseException")
    })
    public int actualizarProyecto(
        @WebParam(name = "titulo", targetNamespace = "")
        String titulo,
        @WebParam(name = "descripcion", targetNamespace = "")
        String descripcion,
        @WebParam(name = "fechaInicio", targetNamespace = "")
        String fechaInicio,
        @WebParam(name = "fechaFin", targetNamespace = "")
        String fechaFin,
        @WebParam(name = "empresa", targetNamespace = "")
        int empresa,
        @WebParam(name = "idProyecto", targetNamespace = "")
        int idProyecto)
        throws ParseException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<model.Actividad>
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarActividades", targetNamespace = "http://services/", className = "model.ListarActividades")
    @ResponseWrapper(localName = "listarActividadesResponse", targetNamespace = "http://services/", className = "model.ListarActividadesResponse")
    @Action(input = "http://services/WebServiceSvc/listarActividadesRequest", output = "http://services/WebServiceSvc/listarActividadesResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://services/WebServiceSvc/listarActividades/Fault/ParseException")
    })
    public List<Actividad> listarActividades()
        throws ParseException_Exception
    ;

    /**
     * 
     * @param descripcion
     * @param tarea
     * @param idActividad
     * @param fechaInicio
     * @param titulo
     * @param fechaFin
     * @return
     *     returns int
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "actualizarActividad", targetNamespace = "http://services/", className = "model.ActualizarActividad")
    @ResponseWrapper(localName = "actualizarActividadResponse", targetNamespace = "http://services/", className = "model.ActualizarActividadResponse")
    @Action(input = "http://services/WebServiceSvc/actualizarActividadRequest", output = "http://services/WebServiceSvc/actualizarActividadResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://services/WebServiceSvc/actualizarActividad/Fault/ParseException")
    })
    public int actualizarActividad(
        @WebParam(name = "titulo", targetNamespace = "")
        String titulo,
        @WebParam(name = "descripcion", targetNamespace = "")
        String descripcion,
        @WebParam(name = "fechaInicio", targetNamespace = "")
        String fechaInicio,
        @WebParam(name = "fechaFin", targetNamespace = "")
        String fechaFin,
        @WebParam(name = "tarea", targetNamespace = "")
        int tarea,
        @WebParam(name = "idActividad", targetNamespace = "")
        int idActividad)
        throws ParseException_Exception
    ;

    /**
     * 
     * @param password
     * @param email
     * @return
     *     returns model.Usuario
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "autenticarUsuario", targetNamespace = "http://services/", className = "model.AutenticarUsuario")
    @ResponseWrapper(localName = "autenticarUsuarioResponse", targetNamespace = "http://services/", className = "model.AutenticarUsuarioResponse")
    @Action(input = "http://services/WebServiceSvc/autenticarUsuarioRequest", output = "http://services/WebServiceSvc/autenticarUsuarioResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://services/WebServiceSvc/autenticarUsuario/Fault/ParseException")
    })
    public Usuario autenticarUsuario(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password)
        throws ParseException_Exception
    ;

    /**
     * 
     * @param direccion
     * @param idEmpresa
     * @param telefono
     * @param nombre
     * @param email
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "actualizarEmpresa", targetNamespace = "http://services/", className = "model.ActualizarEmpresa")
    @ResponseWrapper(localName = "actualizarEmpresaResponse", targetNamespace = "http://services/", className = "model.ActualizarEmpresaResponse")
    @Action(input = "http://services/WebServiceSvc/actualizarEmpresaRequest", output = "http://services/WebServiceSvc/actualizarEmpresaResponse")
    public int actualizarEmpresa(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "direccion", targetNamespace = "")
        String direccion,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "telefono", targetNamespace = "")
        String telefono,
        @WebParam(name = "idEmpresa", targetNamespace = "")
        int idEmpresa);

    /**
     * 
     * @param descripcion
     * @param tarea
     * @param fechaInicio
     * @param titulo
     * @param fechaFin
     * @return
     *     returns int
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertarActividad", targetNamespace = "http://services/", className = "model.InsertarActividad")
    @ResponseWrapper(localName = "insertarActividadResponse", targetNamespace = "http://services/", className = "model.InsertarActividadResponse")
    @Action(input = "http://services/WebServiceSvc/insertarActividadRequest", output = "http://services/WebServiceSvc/insertarActividadResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://services/WebServiceSvc/insertarActividad/Fault/ParseException")
    })
    public int insertarActividad(
        @WebParam(name = "titulo", targetNamespace = "")
        String titulo,
        @WebParam(name = "descripcion", targetNamespace = "")
        String descripcion,
        @WebParam(name = "fechaInicio", targetNamespace = "")
        String fechaInicio,
        @WebParam(name = "fechaFin", targetNamespace = "")
        String fechaFin,
        @WebParam(name = "tarea", targetNamespace = "")
        int tarea)
        throws ParseException_Exception
    ;

    /**
     * 
     * @param idActividad
     * @return
     *     returns int
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "eliminarActividad", targetNamespace = "http://services/", className = "model.EliminarActividad")
    @ResponseWrapper(localName = "eliminarActividadResponse", targetNamespace = "http://services/", className = "model.EliminarActividadResponse")
    @Action(input = "http://services/WebServiceSvc/eliminarActividadRequest", output = "http://services/WebServiceSvc/eliminarActividadResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://services/WebServiceSvc/eliminarActividad/Fault/ParseException")
    })
    public int eliminarActividad(
        @WebParam(name = "idActividad", targetNamespace = "")
        int idActividad)
        throws ParseException_Exception
    ;

    /**
     * 
     * @param idProyecto
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "eliminarProyecto", targetNamespace = "http://services/", className = "model.EliminarProyecto")
    @ResponseWrapper(localName = "eliminarProyectoResponse", targetNamespace = "http://services/", className = "model.EliminarProyectoResponse")
    @Action(input = "http://services/WebServiceSvc/eliminarProyectoRequest", output = "http://services/WebServiceSvc/eliminarProyectoResponse")
    public int eliminarProyecto(
        @WebParam(name = "idProyecto", targetNamespace = "")
        int idProyecto);

    /**
     * 
     * @return
     *     returns java.util.List<model.Usuario>
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarUsuarios", targetNamespace = "http://services/", className = "model.ListarUsuarios")
    @ResponseWrapper(localName = "listarUsuariosResponse", targetNamespace = "http://services/", className = "model.ListarUsuariosResponse")
    @Action(input = "http://services/WebServiceSvc/listarUsuariosRequest", output = "http://services/WebServiceSvc/listarUsuariosResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://services/WebServiceSvc/listarUsuarios/Fault/ParseException")
    })
    public List<Usuario> listarUsuarios()
        throws ParseException_Exception
    ;

    /**
     * 
     * @param password
     * @param apellido
     * @param nombre
     * @param email
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertarUsuario", targetNamespace = "http://services/", className = "model.InsertarUsuario")
    @ResponseWrapper(localName = "insertarUsuarioResponse", targetNamespace = "http://services/", className = "model.InsertarUsuarioResponse")
    @Action(input = "http://services/WebServiceSvc/insertarUsuarioRequest", output = "http://services/WebServiceSvc/insertarUsuarioResponse")
    public int insertarUsuario(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "apellido", targetNamespace = "")
        String apellido,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param descripcion
     * @param fechaInicio
     * @param titulo
     * @param empresa
     * @param fechaFin
     * @return
     *     returns int
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertarProyecto", targetNamespace = "http://services/", className = "model.InsertarProyecto")
    @ResponseWrapper(localName = "insertarProyectoResponse", targetNamespace = "http://services/", className = "model.InsertarProyectoResponse")
    @Action(input = "http://services/WebServiceSvc/insertarProyectoRequest", output = "http://services/WebServiceSvc/insertarProyectoResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://services/WebServiceSvc/insertarProyecto/Fault/ParseException")
    })
    public int insertarProyecto(
        @WebParam(name = "titulo", targetNamespace = "")
        String titulo,
        @WebParam(name = "descripcion", targetNamespace = "")
        String descripcion,
        @WebParam(name = "fechaInicio", targetNamespace = "")
        String fechaInicio,
        @WebParam(name = "fechaFin", targetNamespace = "")
        String fechaFin,
        @WebParam(name = "empresa", targetNamespace = "")
        int empresa)
        throws ParseException_Exception
    ;

    /**
     * 
     * @param direccion
     * @param telefono
     * @param nombre
     * @param email
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertarEmpresa", targetNamespace = "http://services/", className = "model.InsertarEmpresa")
    @ResponseWrapper(localName = "insertarEmpresaResponse", targetNamespace = "http://services/", className = "model.InsertarEmpresaResponse")
    @Action(input = "http://services/WebServiceSvc/insertarEmpresaRequest", output = "http://services/WebServiceSvc/insertarEmpresaResponse")
    public int insertarEmpresa(
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "direccion", targetNamespace = "")
        String direccion,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "telefono", targetNamespace = "")
        String telefono);

    /**
     * 
     * @param idEmpresa
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "eliminarEmpresa", targetNamespace = "http://services/", className = "model.EliminarEmpresa")
    @ResponseWrapper(localName = "eliminarEmpresaResponse", targetNamespace = "http://services/", className = "model.EliminarEmpresaResponse")
    @Action(input = "http://services/WebServiceSvc/eliminarEmpresaRequest", output = "http://services/WebServiceSvc/eliminarEmpresaResponse")
    public int eliminarEmpresa(
        @WebParam(name = "idEmpresa", targetNamespace = "")
        int idEmpresa);

    /**
     * 
     * @param idUsuario
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "eliminarUsuario", targetNamespace = "http://services/", className = "model.EliminarUsuario")
    @ResponseWrapper(localName = "eliminarUsuarioResponse", targetNamespace = "http://services/", className = "model.EliminarUsuarioResponse")
    @Action(input = "http://services/WebServiceSvc/eliminarUsuarioRequest", output = "http://services/WebServiceSvc/eliminarUsuarioResponse")
    public int eliminarUsuario(
        @WebParam(name = "idUsuario", targetNamespace = "")
        int idUsuario);

}
